<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyb.mobileshop.dao.MsTypeBrandMapper">
  <resultMap id="BaseResultMap" type="com.zyb.mobileshop.entity.MsTypeBrand">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="creatime" jdbcType="TIMESTAMP" property="creatime" />
    <result column="modifytime" jdbcType="TIMESTAMP" property="modifytime" />
    <!-- 一对一关系 -->
    <association property="briefGoodsType" javaType="com.zyb.mobileshop.entity.brief.BriefGoodsType">
      <id property="type_id" column="type_id"/>
      <!-- 字段名和起的别名一致 -->
      <result property="name" column="type_name"/>
      <result property="params" column="params"/>
    </association>
    <association property="briefBrand" javaType="com.zyb.mobileshop.entity.brief.BriefBrand">
      <id property="brand_id" column="brand_id"/>
      <result property="name" column="brand_name"/>
      <result property="logo" column="logo"/>
    </association>

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type_id, brand_id, creatime, modifytime
  </sql>
  <select id="selectByExample" parameterType="com.zyb.mobileshop.entity.MsTypeBrandExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ms_type_brand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ms_type_brand
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ms_type_brand
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyb.mobileshop.entity.MsTypeBrandExample">
    delete from ms_type_brand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyb.mobileshop.entity.MsTypeBrand">
    insert into ms_type_brand (id, type_id, brand_id, 
      creatime, modifytime)
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{brandId,jdbcType=INTEGER}, 
      #{creatime,jdbcType=TIMESTAMP}, #{modifytime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zyb.mobileshop.entity.MsTypeBrand">
    insert into ms_type_brand
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="creatime != null">
        creatime,
      </if>
      <if test="modifytime != null">
        modifytime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="creatime != null">
        #{creatime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyb.mobileshop.entity.MsTypeBrandExample" resultType="java.lang.Long">
    select count(*) from ms_type_brand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ms_type_brand
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.creatime != null">
        creatime = #{record.creatime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifytime != null">
        modifytime = #{record.modifytime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ms_type_brand
    set id = #{record.id,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      creatime = #{record.creatime,jdbcType=TIMESTAMP},
      modifytime = #{record.modifytime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyb.mobileshop.entity.MsTypeBrand">
    update ms_type_brand
    <set>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="creatime != null">
        creatime = #{creatime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifytime != null">
        modifytime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyb.mobileshop.entity.MsTypeBrand">
    update ms_type_brand
    set type_id = #{typeId,jdbcType=INTEGER},
      brand_id = #{brandId,jdbcType=INTEGER},
      creatime = #{creatime,jdbcType=TIMESTAMP},
      modifytime = #{modifytime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findByTypeId" parameterType="int" resultType="com.zyb.mobileshop.entity.MsTypeBrand" resultMap="BaseResultMap">
    select * from ms_type_brand where type_id = #{typeId};
  </select>
  <select id="findById" parameterType="int" resultType="com.zyb.mobileshop.entity.MsTypeBrand" resultMap="BaseResultMap">
    select * from ms_type_brand where id = #{id};
  </select>
  <select id="findUnion" resultMap="BaseResultMap">
    select mtb.*, mgt.type_id,mgt.name type_name,mgt.params,mb.brand_id,mb.name brand_name,mb.logo
    from ms_type_brand mtb
    join ms_goods_type mgt
    on mgt.type_id = mtb.type_id
    join ms_brand mb
    on mtb.brand_id = mb.brand_id
  </select>

  <!-- 类型品牌表、类型表关联查询,根据品牌id查询 -->
  <select id="findUnionByBrandId" parameterType="int" resultMap="BaseResultMap">
		select mtb.*,mgt.type_id,mgt.name,mgt.params
		from
		ms_type_brand mtb join ms_goods_type mgt
		on mtb.type_id=mgt.type_id
		where mtb.brand_id=#{brandId}
	</select>

  <!-- 类型品牌表、品牌表、类型表关联查询，根据id查询 -->
  <!-- 为商品类型的name和品牌的name起别名 -->
  <select id="findUnionById" parameterType="int" resultMap="BaseResultMap">
		select mtb.*,mgt.type_id,mgt.name type_name,mgt.params,
		mb.brand_id,mb.name brand_name,mb.logo
		from
		ms_type_brand mtb join ms_goods_type mgt
		on mtb.type_id=mgt.type_id
		join ms_brand mb
		on mtb.brand_id=mb.brand_id
		where id=#{id}
	</select>

  <select id="findByBrandId" parameterType="int"
          resultType="com.zyb.mobileshop.entity.MsTypeBrand" resultMap="BaseResultMap">
		select * from ms_type_brand where brand_id=#{brandId}
	</select>

  <!-- 类型品牌表、品牌表、类型表关联查询，根据类型id查询 -->
  <select id="findUnionByTypeId" parameterType="int" resultMap="BaseResultMap">
		select mtb.*,
		mb.brand_id,mb.name brand_name,mb.logo,
		mgt.type_id,mgt.name type_name,mgt.params
		from
		ms_type_brand mtb join ms_brand mb
		on mtb.brand_id=mb.brand_id
		join ms_goods_type mgt
		on mtb.type_id=mgt.type_id
		where mtb.type_id=#{typeId}
	</select>


</mapper>